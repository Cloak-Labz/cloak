services:
  # PostgreSQL database for the indexer
  postgres:
    image: postgres:15-alpine
    container_name: cloak-postgres
    environment:
      POSTGRES_DB: cloak_indexer
      POSTGRES_USER: cloak
      POSTGRES_PASSWORD: development_password_change_in_production
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5434:5432"  # Changed from 5432 to 5434 to avoid conflict with existing postgres on 5433
    volumes:
      - cloak_postgres_data:/var/lib/postgresql/data
    networks:
      - cloak-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cloak -d cloak_indexer"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Indexer microservice (Rust)
  indexer:
    build:
      context: .
      dockerfile: ./services/indexer/Dockerfile
    container_name: cloak-indexer
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://cloak:development_password_change_in_production@postgres:5432/cloak_indexer
      - PORT=3001
      - LOG_LEVEL=info
      - SOLANA_RPC_URL=https://api.devnet.solana.com
      - SHIELD_POOL_PROGRAM_ID=${SHIELD_POOL_PROGRAM_ID:-}
      - TREE_HEIGHT=32
      - ARTIFACTS_BASE_PATH=./artifacts
      - SP1_VERSION=v2.0.0
      - RUST_LOG=cloak_indexer=info,sqlx=warn
      - RUST_BACKTRACE=1
    ports:
      - "3001:3001"
    volumes:
      - indexer_logs:/app/logs
      - indexer_artifacts:/app/artifacts
    networks:
      - cloak-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--quiet",
          "--tries=1",
          "--spider",
          "http://localhost:3001/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # # Relay microservice (placeholder for future)
  # relay:
  #   build:
  #     context: .
  #     dockerfile: ./services/relay/Dockerfile
  #   container_name: cloak-relay
  #   environment:
  #     - NODE_ENV=development
  #     - PORT=3002
  #     - INDEXER_URL=http://indexer:3001
  #   ports:
  #     - "3002:3002"
  #   volumes:
  #     - ./services/relay:/app
  #     - /app/node_modules
  #   networks:
  #     - cloak-network
  #   depends_on:
  #     - indexer
  #   restart: unless-stopped

  # Redis for caching and queues (optional for future use)
  redis:
    image: redis:7-alpine
    container_name: cloak-redis
    ports:
      - "6380:6379"  # Changed from 6379 to 6380 to avoid conflict
    volumes:
      - redis_data:/data
    networks:
      - cloak-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  cloak_postgres_data:  # Renamed to avoid conflicts
    driver: local
  redis_data:
    driver: local
  indexer_logs:
    driver: local
  indexer_artifacts:
    driver: local

networks:
  cloak-network:
    driver: bridge
